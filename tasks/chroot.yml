---
- name: "Check that apt-get exists in {{ chroot_dir | default('/chroot') }}"
  ansible.builtin.stat:
    path: "{{ chroot_dir | default('/chroot') }}/usr/bin/apt-get"
  register: upgrade_chroot_apt
  tags:
    - upgrade
    - chroot

- name: "When apt-get exists in {{ chroot_dir | default('/chroot') }}"
  block:

    - name: Update package lists in the chroot
      ansible.builtin.command: "chroot {{ chroot_dir | default('/chroot') }} apt-get -qq update"
      environment:
        DEBIAN_FRONTEND: noninteractive
      check_mode: false
      changed_when: false
      register: upgrade_chroot_apt_get_update

    - name: Debugging
      block:

        - name: Debug chroot apt-get update standard out
          ansible.builtin.debug:
            msg: "Standard out from `chroot {{ chroot_dir | default('/chroot') }} apt-get -qq update` : {{ upgrade_chroot_apt_get_update.stdout }}"
            verbosity: 1
          when:
            - upgrade_chroot_apt_get_update.stdout is defined
            - upgrade_chroot_apt_get_update.stdout | length > 0

        - name: Debug chroot apt-get update standard error
          ansible.builtin.debug:
            msg: "Standard error from `chroot {{ chroot_dir | default('/chroot') }} apt-get -qq update` : {{ upgrade_chroot_apt_get_update.stderr }}"
            verbosity: 1
          when:
            - upgrade_chroot_apt_get_update.stderr is defined
            - upgrade_chroot_apt_get_update.stderr | length > 0

      when:
        - upgrade_chroot_apt_get_update is defined
        - ansible_verbosity > 0

    - name: Dist-upgrade in the chroot
      ansible.builtin.command: "chroot {{ chroot_dir | default('/chroot') }} apt-get -o Dpkg::Options::='--force-confold' dist-upgrade -fy"
      environment:
        DEBIAN_FRONTEND: noninteractive
      register: upgrade_chroot_apt_get_dist_upgrade

    - name: Debugging
      block:

        - name: Debug chroot apt-get dist-upgrade standard out
          ansible.builtin.debug:
            msg: "Standard out from `chroot {{ chroot_dir | default('/chroot') }} apt-get dist-upgrade -fy` : {{ upgrade_chroot_apt_get_dist_upgrade.stdout }}"
            verbosity: 1
          when: upgrade_chroot_apt_get_dist_upgrade.stdout | length > 0

        - name: Debug chroot apt-get dist-upgrade standard error
          ansible.builtin.debug:
            msg: "Standard error from `chroot {{ chroot_dir | default('/chroot') }} apt-get dist-upgrade -fy` : {{ upgrade_chroot_apt_get_dist_upgrade.stderr }}"
            verbosity: 1
          when: upgrade_chroot_apt_get_dist_upgrade.stderr | length > 0

      when:
        - not ansible_check_mode | bool
        - upgrade_chroot_apt_get_dist_upgrade is defined
        - ansible_verbosity > 0

    - name: Apt autoremove in the /chroot
      ansible.builtin.command: "chroot {{ chroot_dir | default('/chroot') }} apt autoremove -yfq"
      environment:
        DEBIAN_FRONTEND: noninteractive
      register: upgrade_chroot_apt_autoremove

    - name: Debugging
      block:

        - name: Debug chroot apt autoremove standard out
          ansible.builtin.debug:
            msg: "Standard out from `chroot {{ chroot_dir | default('/chroot') }} apt autoremove -yfq`"
            verbosity: 1
          when:
            - upgrade_chroot_apt_autoremove.stdout is defined
            - upgrade_chroot_apt_autoremove.stdout | length > 0

        - name: Debug chroot apt autoremove standard error
          ansible.builtin.debug:
            msg: "Standard error from `chroot {{ chroot_dir | default('/chroot') }} apt autoremove -yfq`"
            verbosity: 1
          when:
            - upgrade_chroot_apt_autoremove.stderr is defined
            - upgrade_chroot_apt_autoremove.stderr | length > 0

      when:
        - not ansible_check_mode | bool
        - upgrade_chroot_apt_autoremove is defined
        - ansible_verbosity > 0

    - name: Remove set GID from files
      ansible.builtin.shell: "for i in $( find {{ chroot_dir | default('/chroot') }} -perm -2000 ); do chmod g-s $i; done"

    - name: Remove set UID from files
      ansible.builtin.shell: "for i in $( find {{ chroot_dir | default('/chroot') }} -perm -4000 ); do chmod u-s $i; done"

  when: (upgrade_chroot_apt is defined) and (upgrade_chroot_apt.stat.exists | bool)
  tags:
    - upgrade
    - chroot
...
