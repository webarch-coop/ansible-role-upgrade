---
- name: Upgrade Debian packages
  block:

    # TODO replace this with something more elegant
    - name: Check for updates and new packages using apt-get -fq dist-upgrade -sq
      ansible.builtin.shell: |
        set -e -o pipefail
        apt-get -fq dist-upgrade -sq | grep ^Inst | awk '{ print $2 }' | xargs
      args:
        executable: "{{ ansible_local.bash.path }}"
      environment:
        DEBIAN_FRONTEND: noninteractive
      check_mode: false
      changed_when: false
      register: upgrade_packages

    - name: Upgrade packages
      block:

        - name: Debugging
          block:

            - name: "Standard out from `apt-get -fq dist-upgrade -sq | grep ^Inst | awk '{ print $2 }' | xargs`"
              ansible.builtin.debug:
                var: upgrade_packages.stdout

            - name: "Standard error from `apt-get -fq dist-upgrade -sq | grep ^Inst | awk '{ print $2 }' | xargs`"
              ansible.builtin.debug:
                var: upgrade_packages.stderr

          when: >-
            ( ansible_verbosity > 1 ) and (
            ( upgrade_packages.stdout is defined and upgrade_packages.stdout | length > 0 ) or
            ( upgrade_packages.stderr is defined and upgrade_packages.stderr | length > 0 ) )

        - name: Print the list of packages to be upgraded
          ansible.builtin.debug:
            msg: "The following packages are to be upgraded: {{ upgrade_packages.stdout }}"
          when:
            - upgrade_packages.stdout is defined
            - upgrade_packages.stdout | length > 0

        - name: Dist upgrade
          ansible.builtin.apt:
            upgrade: dist
            update_cache: false
            autoclean: true
            autoremove: true
            dpkg_options: force-confold
          environment:
            PATH: /bin:/sbin:/usr/bin:/usr/sbin
          register: upgrade_dist_upgrade

        - name: Debugging
          block:

            - name: Standard out from aptitude dist-upgrade
              ansible.builtin.debug:
                var: upgrade_dist_upgrade.stdout

            - name: Standard error from aptitude dist-upgrade
              ansible.builtin.debug:
                var: upgrade_dist_upgrade.stderr

          when: >-
            ( ansible_verbosity > 1 ) and (
            ( upgrade_dist_upgrade.stdout | length > 0 ) or
            ( pgrade_dist_upgrade.stderr | length > 0 ) )

        # The logchange script is in the https://git.coop/webarch/scripts repo
        - name: Check the existance of /usr/local/bin/logchange
          ansible.builtin.stat:
            path: /usr/local/bin/logchange
          register: upgrade_logchange

        - name: Update the Changelog
          ansible.builtin.command: "logchange '{{ upgrade_packages.stdout | quote }} : updated'"
          when: upgrade_logchange.stat.exists | bool

        - name: Aptitude clean  # noqa yaml[comments] command-instead-of-module
          ansible.builtin.command: aptitude clean
          register: upgrade_aptitude_clean
          changed_when: upgrade_aptitude_clean.stdout | length > 0

        - name: Standard out from aptitude clean
          ansible.builtin.debug:
            var: upgrade_aptitude_clean.stdout
            verbosity: 2
          when: upgrade_aptitude_clean.stdout | length > 0

        - name: Restart Docker if it has been updated
          ansible.builtin.service:
            name: docker
            state: restarted
          when: >-
            ( "docker-ce" in upgrade_dist_upgrade.stdout ) or
            ( "containerd.io" in upgrade_dist_upgrade.stdout )

        - name: Check the existance of /etc/munin/plugins/apt_all
          ansible.builtin.stat:
            path: /etc/munin/plugins/apt_all
          register: upgrade_munin_plugin_apt_all

        - name: Conditionally include munin tasks
          ansible.builtin.include_tasks: munin.yml
          when: upgrade_munin_plugin_apt_all.stat.exists | bool

      when:
        - upgrade_packages is defined
        - upgrade_packages.stdout is defined

  tags:
    - upgrade
...
