# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects Upgrade Ansible role.
#
# The Webarchitects Upgrade Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Upgrade Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Upgrade Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Upgrade Debian packages
  block:

    - name: Print the list of packages to be upgraded
      ansible.builtin.debug:
        var: upgrade_pkgs

    - name: Dist upgrade
      ansible.builtin.apt:
        upgrade: dist
        update_cache: false
        dpkg_options: force-confdef,force-confold
      environment:
        DEBIAN_FRONTEND: noninteractive
        PATH: /usr/sbin:/usr/bin:/sbin:/bin
      register: upgrade_dist_upgrade

    - name: Debug the results of the dist upgrade
      ansible.builtin.debug:
        var: upgrade_dist_upgrade.stdout_lines
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      when: upgrade_dist_upgrade.stdout_lines is defined

    - name: Apt autoremove and clean
      ansible.builtin.apt:
        autoremove: true
        clean: true
      environment:
        DEBIAN_FRONTEND: noninteractive
        PATH: /usr/sbin:/usr/bin:/sbin:/bin
      register: upgrade_dist_apt_clean

    - name: Debug the results of apt autoremove and clean
      ansible.builtin.debug:
        var: upgrade_dist_apt_clean
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      when: upgrade_dist_apt_clean | length > 0

    # This doesn't work, see https://git.coop/webarch/upgrade/-/issues/2
    # - name: Set a fact for the names of the packages upgraded
    #   ansible.builtin.set_fact:
    #     upgrade_dist_upgraded: "{{ upgrade_dist_upgrade.stdout | split('\n') | select('regex', '^[ ]{2}') | map('regex_replace', '^[ ]{2}') }}"
    #   when: upgrade_dist_upgrade is defined

    # - name: Debug the names of the packages upgraded
    #   ansible.builtin.debug:
    #     var: upgrade_dist_upgraded
    #     verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
    #   when:
    #     - upgrade_dist_upgraded is defined
    #     - upgrade_dist_upgraded != []

    - name: Update the Changelog
      block:

        - name: Check if the Changelog exists
          ansible.builtin.stat:
            path: /root/Changelog
          register: upgrade_changelog_path

        - name: Backup the Changelog
          community.general.archive:
            path: /root/Changelog
            dest: "/root/.Changelog/Changelog.{{ upgrade_changelog_time }}.gz"
            remove: false
            mode: "0600"
            owner: root
            group: root
          when: upgrade_changelog_path.stat.exists | bool

        # TODO strip everything after a colon from package names see https://askubuntu.com/a/1262555
        # to avoid entries like this linux-image-6.1.0-10-amd64:amd64/bookworm
        - name: Write the Changelog update  # noqa: command-instead-of-module
          ansible.builtin.shell: |-
            sed -i "1 i\
            {{ upgrade_changelog_date }}\t{{ upgrade_changelog_user }}\
            \n\t*\t{{ upgrade_pkgs | join(' ') }} : updated\n" /root/Changelog
          environment:
            PATH: /usr/sbin:/usr/bin:/sbin:/bin
          changed_when: true

      when:
        - upgrade_changelog | bool
        - upgrade_changelog_date is defined
        - upgrade_changelog_time is defined
        - upgrade_pkgs is defined
        - upgrade_pkgs != []

    - name: Restart Docker if it has been updated
      ansible.builtin.service:
        name: docker
        state: restarted
      when:
        - upgrade_pkgs is defined
        - ( "docker-ce" in upgrade_pkgs )

    - name: Include OpenProject tasks
      ansible.builtin.include_tasks: op.yml
      when:
        - upgrade_pkgs is defined
        - ( "openproject" in upgrade_pkgs )

    - name: Check the existance of /etc/munin/plugins/apt_all
      ansible.builtin.stat:
        path: /etc/munin/plugins/apt_all
      register: upgrade_munin_plugin_apt_all

    - name: Conditionally include munin tasks
      ansible.builtin.include_tasks: munin.yml
      when: upgrade_munin_plugin_apt_all.stat.exists | bool

  tags:
    - upgrade
...
